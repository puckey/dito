"use strict";

var _toPromiseCallback = require("./toPromiseCallback");

describe('toPromiseCallback()', function () {
  it('should call reject() when called with an error', function () {
    var error = new Error('My Error');
    var resolve = jest.fn();
    var reject = jest.fn();
    var callback = (0, _toPromiseCallback.toPromiseCallback)(resolve, reject);
    callback(error);
    expect(resolve).not.toBeCalled();
    expect(reject).toBeCalledWith(error);
  });
  it('should call resolve() when called with a result', function () {
    var result = 42;
    var resolve = jest.fn();
    var reject = jest.fn();
    var callback = (0, _toPromiseCallback.toPromiseCallback)(resolve, reject);
    callback(null, result);
    expect(reject).not.toBeCalled();
    expect(resolve).toBeCalledWith(result);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mdW5jdGlvbi90b1Byb21pc2VDYWxsYmFjay50ZXN0LmpzIl0sIm5hbWVzIjpbImRlc2NyaWJlIiwiaXQiLCJlcnJvciIsIkVycm9yIiwicmVzb2x2ZSIsImplc3QiLCJmbiIsInJlamVjdCIsImNhbGxiYWNrIiwiZXhwZWN0Iiwibm90IiwidG9CZUNhbGxlZCIsInRvQmVDYWxsZWRXaXRoIiwicmVzdWx0Il0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUVBQSxRQUFRLENBQUMscUJBQUQsRUFBd0IsWUFBTTtBQUNwQ0MsRUFBQUEsRUFBRSxDQUFDLGdEQUFELEVBQW1ELFlBQU07QUFDekQsUUFBTUMsS0FBSyxHQUFHLElBQUlDLEtBQUosQ0FBVSxVQUFWLENBQWQ7QUFDQSxRQUFNQyxPQUFPLEdBQUdDLElBQUksQ0FBQ0MsRUFBTCxFQUFoQjtBQUNBLFFBQU1DLE1BQU0sR0FBR0YsSUFBSSxDQUFDQyxFQUFMLEVBQWY7QUFDQSxRQUFNRSxRQUFRLEdBQUcsMENBQWtCSixPQUFsQixFQUEyQkcsTUFBM0IsQ0FBakI7QUFDQUMsSUFBQUEsUUFBUSxDQUFDTixLQUFELENBQVI7QUFDQU8sSUFBQUEsTUFBTSxDQUFDTCxPQUFELENBQU4sQ0FBZ0JNLEdBQWhCLENBQW9CQyxVQUFwQjtBQUNBRixJQUFBQSxNQUFNLENBQUNGLE1BQUQsQ0FBTixDQUFlSyxjQUFmLENBQThCVixLQUE5QjtBQUNELEdBUkMsQ0FBRjtBQVVBRCxFQUFBQSxFQUFFLENBQUMsaURBQUQsRUFBb0QsWUFBTTtBQUMxRCxRQUFNWSxNQUFNLEdBQUcsRUFBZjtBQUNBLFFBQU1ULE9BQU8sR0FBR0MsSUFBSSxDQUFDQyxFQUFMLEVBQWhCO0FBQ0EsUUFBTUMsTUFBTSxHQUFHRixJQUFJLENBQUNDLEVBQUwsRUFBZjtBQUNBLFFBQU1FLFFBQVEsR0FBRywwQ0FBa0JKLE9BQWxCLEVBQTJCRyxNQUEzQixDQUFqQjtBQUNBQyxJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPSyxNQUFQLENBQVI7QUFDQUosSUFBQUEsTUFBTSxDQUFDRixNQUFELENBQU4sQ0FBZUcsR0FBZixDQUFtQkMsVUFBbkI7QUFDQUYsSUFBQUEsTUFBTSxDQUFDTCxPQUFELENBQU4sQ0FBZ0JRLGNBQWhCLENBQStCQyxNQUEvQjtBQUNELEdBUkMsQ0FBRjtBQVNELENBcEJPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0b1Byb21pc2VDYWxsYmFjayB9IGZyb20gJy4vdG9Qcm9taXNlQ2FsbGJhY2snXG5cbmRlc2NyaWJlKCd0b1Byb21pc2VDYWxsYmFjaygpJywgKCkgPT4ge1xuICBpdCgnc2hvdWxkIGNhbGwgcmVqZWN0KCkgd2hlbiBjYWxsZWQgd2l0aCBhbiBlcnJvcicsICgpID0+IHtcbiAgICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcignTXkgRXJyb3InKVxuICAgIGNvbnN0IHJlc29sdmUgPSBqZXN0LmZuKClcbiAgICBjb25zdCByZWplY3QgPSBqZXN0LmZuKClcbiAgICBjb25zdCBjYWxsYmFjayA9IHRvUHJvbWlzZUNhbGxiYWNrKHJlc29sdmUsIHJlamVjdClcbiAgICBjYWxsYmFjayhlcnJvcilcbiAgICBleHBlY3QocmVzb2x2ZSkubm90LnRvQmVDYWxsZWQoKVxuICAgIGV4cGVjdChyZWplY3QpLnRvQmVDYWxsZWRXaXRoKGVycm9yKVxuICB9KVxuXG4gIGl0KCdzaG91bGQgY2FsbCByZXNvbHZlKCkgd2hlbiBjYWxsZWQgd2l0aCBhIHJlc3VsdCcsICgpID0+IHtcbiAgICBjb25zdCByZXN1bHQgPSA0MlxuICAgIGNvbnN0IHJlc29sdmUgPSBqZXN0LmZuKClcbiAgICBjb25zdCByZWplY3QgPSBqZXN0LmZuKClcbiAgICBjb25zdCBjYWxsYmFjayA9IHRvUHJvbWlzZUNhbGxiYWNrKHJlc29sdmUsIHJlamVjdClcbiAgICBjYWxsYmFjayhudWxsLCByZXN1bHQpXG4gICAgZXhwZWN0KHJlamVjdCkubm90LnRvQmVDYWxsZWQoKVxuICAgIGV4cGVjdChyZXNvbHZlKS50b0JlQ2FsbGVkV2l0aChyZXN1bHQpXG4gIH0pXG59KVxuIl19